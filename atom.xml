<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>华夏虾滑</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://edoup.github.io/"/>
  <updated>2020-02-23T06:42:10.278Z</updated>
  <id>http://edoup.github.io/</id>
  
  <author>
    <name>华夏虾滑</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>设计模式应用场景</title>
    <link href="http://edoup.github.io/2020/02/23/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E5%BA%94%E7%94%A8%E5%9C%BA%E6%99%AF/"/>
    <id>http://edoup.github.io/2020/02/23/设计模式应用场景/</id>
    <published>2020-02-23T06:36:44.000Z</published>
    <updated>2020-02-23T06:42:10.278Z</updated>
    
    <content type="html"><![CDATA[<ul><li>结构型模式：<ul><li>适配器：用来把一个接口转化成另一个接口，如 java.util.Arrays#asList()。</li><li>桥接模式：这个模式将抽象和抽象操作的实现进行了解耦，这样使得抽象和实现可以独立地变化，如JDBC；</li><li>组合模式：使得客户端看来单个对象和对象的组合是同等的。换句话说，某个类型的方法同时也接受自身类型作为参数，如 Map.putAll，List.addAll、Set.addAll。</li><li>装饰者模式：动态的给一个对象附加额外的功能，这也是子类的一种替代方式，如 java.util.Collections#checkedList|Map|Set|SortedSet|SortedMap。</li><li>享元模式：使用缓存来加速大量小对象的访问时间，如 valueOf(int)。</li><li>代理模式：代理模式是用一个简单的对象来代替一个复杂的或者创建耗时的对象，如 java.lang.reflect.Proxy</li></ul></li><li>创建模式:<ul><li>抽象工厂模式：抽象工厂模式提供了一个协议来生成一系列的相关或者独立的对象，而不用指定具体对象的类型，如 java.util.Calendar#getInstance()。</li><li>建造模式(Builder)：定义了一个新的类来构建另一个类的实例，以简化复杂对象的创建，如：java.lang.StringBuilder#append()。</li><li>工厂方法：就是一个返回具体对象的方法，而不是多个，如 java.lang.Object#toString()、java.lang.Class#newInstance()。</li><li>原型模式：使得类的实例能够生成自身的拷贝、如：java.lang.Object#clone()。</li><li>单例模式：全局只有一个实例，如 java.lang.Runtime#getRuntime()。</li></ul></li><li>行为模式：<ul><li>责任链模式：通过把请求从一个对象传递到链条中下一个对象的方式，直到请求被处理完毕，以实现对象间的解耦。如 javax.servlet.Filter#doFilter()。</li><li>命令模式：将操作封装到对象内，以便存储，传递和返回，如：java.lang.Runnable。</li><li>解释器模式：定义了一个语言的语法，然后解析相应语法的语句，如，java.text.Format，java.text.Normalizer。</li><li>迭代器模式：提供一个一致的方法来顺序访问集合中的对象，如 java.util.Iterator。</li><li>中介者模式：通过使用一个中间对象来进行消息分发以及减少类之间的直接依赖，java.lang.reflect.Method#invoke()。</li><li>空对象模式：如 java.util.Collections#emptyList()。</li><li>观察者模式：它使得一个对象可以灵活的将消息发送给感兴趣的对象，如 java.util.EventListener。</li><li>模板方法模式：让子类可以重写方法的一部分，而不是整个重写，如 java.util.Collections#sort()。</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;结构型模式：&lt;ul&gt;
&lt;li&gt;适配器：用来把一个接口转化成另一个接口，如 java.util.Arrays#asList()。&lt;/li&gt;
&lt;li&gt;桥接模式：这个模式将抽象和抽象操作的实现进行了解耦，这样使得抽象和实现可以独立地变化，如JDBC；&lt;/li&gt;
&lt;li
      
    
    </summary>
    
      <category term="java" scheme="http://edoup.github.io/categories/java/"/>
    
    
      <category term="java" scheme="http://edoup.github.io/tags/java/"/>
    
      <category term="设计模式" scheme="http://edoup.github.io/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>java学习资源推荐</title>
    <link href="http://edoup.github.io/2019/01/05/javaSource/"/>
    <id>http://edoup.github.io/2019/01/05/javaSource/</id>
    <published>2019-01-05T15:17:08.000Z</published>
    <updated>2019-01-05T15:20:50.140Z</updated>
    
    <content type="html"><![CDATA[<p>###<a href="https://www.jianshu.com/p/ebf9151a5e67" target="_blank" rel="noopener">个人常用视频网站</a><br><strong>1.  黑马</strong></p><blockquote><p>官网:<a href="http://www.itheima.com/" target="_blank" rel="noopener">http://www.itheima.com/</a><br>视频库：<a href="http://yun.itheima.com/" target="_blank" rel="noopener">http://yun.itheima.com/</a><br>特点: 培训机构，紧跟时代，培训使用技术新且成体系，学习时间长<br>最新最好的培训视频一般不公开。<br>可先在官网查看其最新的培训课表，以java为例：<a href="http://www.itheima.com/special/hmjavaeezly/" target="_blank" rel="noopener">http://www.itheima.com/special/hmjavaeezly/</a><br>再从某宝、某度、云盘、各种论坛去找。</p></blockquote><table><thead><tr><th>实战</th><th style="text-align:center">链接</th><th style="text-align:right">提取码</th></tr></thead><tbody><tr><td>pinyougou</td><td style="text-align:center"><a href="https://pan.baidu.com/s/17hA0aoohbeksGtpAT0JAYw" target="_blank" rel="noopener">https://pan.baidu.com/s/17hA0aoohbeksGtpAT0JAYw</a></td><td style="text-align:right">2a6i</td></tr><tr><td>leyou</td><td style="text-align:center"><a href="https://pan.baidu.com/s/12YhJRnRS5DGL264gDbhRXA" target="_blank" rel="noopener">https://pan.baidu.com/s/12YhJRnRS5DGL264gDbhRXA</a></td><td style="text-align:right">na33</td></tr><tr><td>shicifang</td><td style="text-align:center"><a href="https://pan.baidu.com/s/1JIpnVYwQ5TqjO9Ee1S5qEA" target="_blank" rel="noopener">https://pan.baidu.com/s/1JIpnVYwQ5TqjO9Ee1S5qEA</a></td><td style="text-align:right">4et4</td></tr></tbody></table><p><strong>2.  慕课网</strong></p><blockquote><p>官网：<a href="https://www.imooc.com/" target="_blank" rel="noopener">https://www.imooc.com/</a><br>特点：免费视频多，通常短小精悍，基本一个视频解决一个问题，适合当做工具以及快速入门。实战通常收费，性价比有高有低。<br>推荐其学习路径功能，整理了大量的零散的视频，以java为例：<a href="http://www.imooc.com/course/programdetail/pid/31" target="_blank" rel="noopener">http://www.imooc.com/course/programdetail/pid/31</a><br>其中实用工具强烈推荐</p></blockquote><p><strong>3. 其他视频网站</strong></p><blockquote><p><a href="https://edu.aliyun.com/developer?spm=5176.11399608.aliyun-edu-index-001.1.Szabeh" target="_blank" rel="noopener">阿里云大学</a><br><a href="http://www.atguigu.com/" target="_blank" rel="noopener">尚硅谷</a><br><a href="https://www.boxuegu.com/" target="_blank" rel="noopener">博学谷</a><br><a href="https://www.bilibili.com/" target="_blank" rel="noopener">B站：</a>    进站直接搜索可能会有意想不到的收获</p></blockquote><p><strong>4. 看过的觉得不错的视频</strong></p><blockquote><p><a href="https://www.bilibili.com/video/av27063171" target="_blank" rel="noopener">Java视频Java8新特性视频教程</a><br><a href="https://study.163.com/course/courseMain.htm?courseId=1062009&amp;_trace_c_p_k2_=cf7dc68533cc44a3a662af84246ca2b3#/courseDetail?tab=1" target="_blank" rel="noopener">尚学堂_史上最易懂的设计模式视频</a></p></blockquote><p>##资料网站<br><strong>1. 菜鸟教程</strong></p><blockquote><p>官网: <a href="http://www.runoob.com/" target="_blank" rel="noopener">http://www.runoob.com/</a><br>技术种类多，适合当做笔记用，不适合长期深入学习之用<br>推荐设计模式:<a href="http://www.runoob.com/design-pattern/design-pattern-tutorial.html" target="_blank" rel="noopener">http://www.runoob.com/design-pattern/design-pattern-tutorial.html</a><br>所有代码可参考个人github:<a href="https://github.com/EDOUP/DesignPattern" target="_blank" rel="noopener">https://github.com/EDOUP/DesignPattern</a></p></blockquote><p>##求职网站 仅供参考</p><ol><li><a href="https://www.nowcoder.com/" target="_blank" rel="noopener">牛客网(题库、求职、讨论区)</a></li><li><a href="https://campus.dajie.com/" target="_blank" rel="noopener">大街网（简历投递)</a></li><li>在线刷题：<br> <a href="https://www.nowcoder.com/ta/coding-interviews?page=1" target="_blank" rel="noopener">剑指offer</a><br> <a href="https://leetcode-cn.com/" target="_blank" rel="noopener">LeetCode中国</a><br> ​       <a href="https://leetcode.com/" target="_blank" rel="noopener">国外版</a><br> <a href="https://xiaoyuan.zhaopin.com/FindFullTime/Presentation/Index" target="_blank" rel="noopener">应届生:</a>查找宣讲会<br> 查薪资：微信小程序搜索 offershow </li></ol><blockquote><p>不管是书籍、视频还是课堂教学，任何学习资源都不可能完全符合自己的实际情况。把握好<strong>学习路线和方法</strong>(好难重点)。学习过程中看到不懂的地方，或许在另一个地方已被完美解决</p></blockquote><p>欢迎补充</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;###&lt;a href=&quot;https://www.jianshu.com/p/ebf9151a5e67&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;个人常用视频网站&lt;/a&gt;&lt;br&gt;&lt;strong&gt;1.  黑马&lt;/strong&gt;&lt;/p&gt;
&lt;blockquot
      
    
    </summary>
    
      <category term="java" scheme="http://edoup.github.io/categories/java/"/>
    
    
      <category term="java" scheme="http://edoup.github.io/tags/java/"/>
    
      <category term="source" scheme="http://edoup.github.io/tags/source/"/>
    
  </entry>
  
  <entry>
    <title>利用java反射机制实现对bean任意属性赋值</title>
    <link href="http://edoup.github.io/2019/01/01/%E5%88%A9%E7%94%A8java%E5%8F%8D%E5%B0%84%E6%9C%BA%E5%88%B6%E5%AE%9E%E7%8E%B0%E5%AF%B9bean%E4%BB%BB%E6%84%8F%E5%B1%9E%E6%80%A7%E8%B5%8B%E5%80%BC/"/>
    <id>http://edoup.github.io/2019/01/01/利用java反射机制实现对bean任意属性赋值/</id>
    <published>2019-01-01T15:04:59.000Z</published>
    <updated>2019-01-03T13:50:28.504Z</updated>
    
    <content type="html"><![CDATA[<p><strong>1.创建一个pojo</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Getter</span></span><br><span class="line"><span class="meta">@Setter</span></span><br><span class="line"><span class="meta">@ToString</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> Boolean isDelete;</span><br><span class="line">    <span class="keyword">private</span> Date date;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中利用<em>lombok</em>生成get/set方法，maven地址：</p><blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt;&lt;dependency&gt;</span><br><span class="line">&gt;   &lt;groupId&gt;org.projectlombok&lt;/groupId&gt;</span><br><span class="line">&gt;   &lt;artifactId&gt;lombok&lt;/artifactId&gt;</span><br><span class="line">&gt;   &lt;version&gt;1.18.0&lt;/version&gt;</span><br><span class="line">&gt;&lt;/dependency&gt;</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><p><strong>2.反射工具类</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ReflectUtils</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span>  <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">setValue</span><span class="params">(Object model,String setName,String setValue)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        Field[] field = model.getClass().getDeclaredFields(); <span class="comment">// 获取实体类的所有属性，返回Field数组</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; field.length; j++) &#123; <span class="comment">// 遍历所有属性</span></span><br><span class="line">                String name = field[j].getName(); <span class="comment">// 获取属性的名字</span></span><br><span class="line">                <span class="keyword">if</span> (name.equals(setName))&#123;</span><br><span class="line">                    name = name.substring(<span class="number">0</span>, <span class="number">1</span>).toUpperCase() + name.substring(<span class="number">1</span>); <span class="comment">// 将属性的首字符大写，方便构造get，set方法</span></span><br><span class="line">                    String type = field[j].getGenericType().toString(); <span class="comment">// 获取属性的类型</span></span><br><span class="line">                    <span class="keyword">if</span> (type.equals(<span class="string">"class java.lang.String"</span>)) &#123; <span class="comment">// 如果type是类类型，则前面包含"class "，后面跟类名</span></span><br><span class="line">                        Method m = model.getClass().getMethod(<span class="string">"get"</span> + name);</span><br><span class="line">                        String value = (String) m.invoke(model); <span class="comment">// 调用getter方法获取属性值</span></span><br><span class="line">                        <span class="keyword">if</span> (value == <span class="keyword">null</span>) &#123;</span><br><span class="line">                            m = model.getClass().getMethod(<span class="string">"set"</span>+name,String.class);</span><br><span class="line">                            m.invoke(model, setValue.toString());</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span> (type.equals(<span class="string">"class java.lang.Integer"</span>)) &#123;</span><br><span class="line">                        Method m = model.getClass().getMethod(<span class="string">"get"</span> + name);</span><br><span class="line">                        Integer value = (Integer) m.invoke(model);</span><br><span class="line">                        <span class="keyword">if</span> (value == <span class="keyword">null</span>) &#123;</span><br><span class="line">                            m = model.getClass().getMethod(<span class="string">"set"</span>+name,Integer.class);</span><br><span class="line">                            m.invoke(model, Integer.parseInt(setValue));</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span> (type.equals(<span class="string">"class java.lang.Long"</span>)) &#123;</span><br><span class="line">                        Method m = model.getClass().getMethod(<span class="string">"get"</span> + name);</span><br><span class="line">                        Long value = (Long) m.invoke(model);</span><br><span class="line">                        <span class="keyword">if</span> (value == <span class="keyword">null</span>) &#123;</span><br><span class="line">                            m = model.getClass().getMethod(<span class="string">"set"</span>+name,Integer.class);</span><br><span class="line">                            m.invoke(model, Long.parseLong(setValue));</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span> (type.equals(<span class="string">"class java.lang.Boolean"</span>)) &#123;</span><br><span class="line">                        Method m = model.getClass().getMethod(<span class="string">"get"</span> + name);</span><br><span class="line">                        Boolean value = (Boolean) m.invoke(model);</span><br><span class="line">                        <span class="keyword">if</span> (value == <span class="keyword">null</span>) &#123;</span><br><span class="line">                            m = model.getClass().getMethod(<span class="string">"set"</span>+name,Boolean.class);</span><br><span class="line">                            m.invoke(model, Boolean.parseBoolean(setValue));</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span> (type.equals(<span class="string">"class java.util.Date"</span>)) &#123;</span><br><span class="line">                        Method m     = model.getClass().getMethod(<span class="string">"get"</span> + name);</span><br><span class="line">                        Date   value = (Date) m.invoke(model);</span><br><span class="line">                        <span class="keyword">if</span> (value == <span class="keyword">null</span>) &#123;</span><br><span class="line">                            m = model.getClass().getMethod(<span class="string">"set"</span>+name,Date.class);</span><br><span class="line">                            SimpleDateFormat sdf    = <span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyy-MM-dd HH:mm:ss"</span>);</span><br><span class="line">                            m.invoke(model, sdf.parse(setValue));</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;<span class="comment">// 如果有需要,可以仿照上面继续进行扩充,再增加对其它类型的判断</span></span><br><span class="line">                    <span class="keyword">break</span>;<span class="comment">//跳出较少循环</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (NoSuchMethodException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SecurityException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IllegalAccessException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IllegalArgumentException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InvocationTargetException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ParseException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>3.测试类</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        User user = <span class="keyword">new</span> User();</span><br><span class="line">    <span class="comment">//传入属性与值均为String类型,经过ReflectUtils转换为对应属性</span></span><br><span class="line">        ReflectUtils.setValue(user,<span class="string">"id"</span>,<span class="string">"12"</span>);</span><br><span class="line">        ReflectUtils.setValue(user,<span class="string">"name"</span>,<span class="string">"zhangsan"</span>);</span><br><span class="line">        ReflectUtils.setValue(user,<span class="string">"isDelete"</span>,<span class="string">"false"</span>);</span><br><span class="line">        ReflectUtils.setValue(user,<span class="string">"date"</span>,<span class="string">"2016-10-24 21:59:06"</span>);</span><br><span class="line"></span><br><span class="line">        User user1 = <span class="keyword">new</span> User();</span><br><span class="line">    <span class="comment">//额外功能推荐：复制相同字段与值</span></span><br><span class="line">        BeanUtils.copyBeanProp(user1,user);</span><br><span class="line">        System.out.println(user);</span><br><span class="line">        System.out.println(user1);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><strong>4.测试输出结果</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">User(id=12, name=zhangsan, isDelete=false, date=Mon Oct 24 21:59:06 CST 2016)</span><br><span class="line">User(id=12, name=zhangsan, isDelete=false, date=Mon Oct 24 21:59:06 CST 2016)</span><br></pre></td></tr></table></figure><p>参考文档：</p><ol><li><p><a href="https://www.cnblogs.com/zhouyalei/p/java-reflect.html" target="_blank" rel="noopener">java 利用反射机制,获取实体所有属性和方法,并对属性赋值</a></p></li><li><p><a href="https://beisicao.iteye.com/blog/1176235" target="_blank" rel="noopener">利用java反射机制对多属性javabean赋值</a></p></li></ol><p>感谢</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;1.创建一个pojo&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span cl
      
    
    </summary>
    
      <category term="javaUtils" scheme="http://edoup.github.io/categories/javaUtils/"/>
    
    
      <category term="java" scheme="http://edoup.github.io/tags/java/"/>
    
      <category term="反射" scheme="http://edoup.github.io/tags/%E5%8F%8D%E5%B0%84/"/>
    
  </entry>
  
  <entry>
    <title>hexo博客搭建简介</title>
    <link href="http://edoup.github.io/2018/12/24/hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E7%AE%80%E4%BB%8B/"/>
    <id>http://edoup.github.io/2018/12/24/hexo博客搭建简介/</id>
    <published>2018-12-24T11:33:07.000Z</published>
    <updated>2018-12-24T15:06:59.820Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、简述"><a href="#一、简述" class="headerlink" title="一、简述"></a>一、简述</h2><ul><li>本站使用Hexo + Next +GitHub Pages + 阿里云域名解析</li></ul><h2 id="二、-推荐阅读"><a href="#二、-推荐阅读" class="headerlink" title="二、 推荐阅读"></a>二、 推荐阅读</h2><ol><li><p><strong>我的个人博客之旅：从jekyll到hexo</strong> </p><p> <a href="https://blog.csdn.net/u011475210/article/details/79023429" target="_blank" rel="noopener">https://blog.csdn.net/u011475210/article/details/79023429</a></p></li><li><p><strong>Hexo主题推荐</strong><a href="https://blog.csdn.net/qincidong/article/details/82415271" target="_blank" rel="noopener">https://blog.csdn.net/qincidong/article/details/82415271</a></p></li><li><p><strong>Hexo</strong> 官网: <a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">https://hexo.io/zh-cn/</a></p></li><li><p><strong>Hexo</strong>官方主题推荐: <a href="https://hexo.io/themes/" target="_blank" rel="noopener">https://hexo.io/themes/</a></p></li><li><p><strong>Next</strong>主题官网: <a href="http://theme-next.iissnan.com/" target="_blank" rel="noopener">http://theme-next.iissnan.com/</a></p></li></ol><h2 id="三、使用工具"><a href="#三、使用工具" class="headerlink" title="三、使用工具"></a>三、使用工具</h2><ol><li><p><strong>GitHub Pages</strong> </p><blockquote><p>页面存放仓库</p></blockquote></li><li><p><strong>GItee</strong></p><blockquote><p>本站源代码托管在Gitee私仓，安全免费不易丟</p></blockquote></li><li><p><strong>阿里云域名解析</strong>：</p><blockquote><p>可以不用</p></blockquote></li><li><p><strong>MarkDown</strong></p><blockquote><p>Hexo 使用的默认语言，配合编辑器使用效果更好</p></blockquote></li></ol><h2 id="四、本站使用的一些插件"><a href="#四、本站使用的一些插件" class="headerlink" title="四、本站使用的一些插件"></a>四、本站使用的一些插件</h2><ol><li><p><strong>不蒜子</strong>两行代码搞定站点计数:<a href="http://busuanzi.ibruce.info/" target="_blank" rel="noopener">http://busuanzi.ibruce.info/</a></p></li><li><p><strong>页面点击爱心效果</strong><a href="https://www.jianshu.com/p/d4a7daebfff7" target="_blank" rel="noopener">https://www.jianshu.com/p/d4a7daebfff7</a></p></li><li><p><a href="https://www.jianshu.com/p/f054333ac9e6" target="_blank" rel="noopener"><strong>hexo的next主题个性化教程:打造炫酷网站</strong></a></p><p>————————-不断学习、不断更新中——————————-</p></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;一、简述&quot;&gt;&lt;a href=&quot;#一、简述&quot; class=&quot;headerlink&quot; title=&quot;一、简述&quot;&gt;&lt;/a&gt;一、简述&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;本站使用Hexo + Next +GitHub Pages + 阿里云域名解析&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 i
      
    
    </summary>
    
      <category term="hexo" scheme="http://edoup.github.io/categories/hexo/"/>
    
    
      <category term="hexo" scheme="http://edoup.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>git简单使用及遇到的一些问题</title>
    <link href="http://edoup.github.io/2018/12/24/git%E4%BD%BF%E7%94%A8%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84%E4%B8%80%E4%BA%9B%E9%97%AE%E9%A2%98/"/>
    <id>http://edoup.github.io/2018/12/24/git使用中遇到的一些问题/</id>
    <published>2018-12-24T08:13:46.000Z</published>
    <updated>2019-01-01T16:15:52.308Z</updated>
    
    <content type="html"><![CDATA[<h2 id="git的简介"><a href="#git的简介" class="headerlink" title="git的简介"></a>git的简介</h2><ul><li>Git是一个开源的分布式版本控制系统，用于敏捷高效地处理任何或小或大的项目。</li></ul><p>Git 是 Linus Torvalds 为了帮助管理 Linux 内核开发而开发的一个开放源码的版本控制软件。</p><p>Git 与常用的版本控制工具 CVS, Subversion 等不同，它采用了分布式版本库的方式，不必服务器端软件支持。<a href="http://www.runoob.com/git/git-tutorial.html" target="_blank" rel="noopener">菜鸟教程简介</a></p><h2 id="基本操作"><a href="#基本操作" class="headerlink" title="基本操作"></a>基本操作</h2><ol><li><p><strong>安装好git</strong>  <a href="https://www.cnblogs.com/mjbin/p/5820942.html" target="_blank" rel="noopener">点此查看30分钟新手git教程</a></p></li><li><p><strong>配置git</strong>  </p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.name "My Name" </span><br><span class="line">$ git config --global user.email myEmail@example.com</span><br></pre></td></tr></table></figure></li><li><p><strong>创建一个新仓库 </strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git init</span><br></pre></td></tr></table></figure></li><li><p><strong>暂存</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git add .</span><br></pre></td></tr></table></figure></li><li><p><strong>提交 – git commit</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git commit -m "message"</span><br></pre></td></tr></table></figure></li><li><p><strong>链接远程仓库</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git remote add origin https://github.com/yourname/yourrepository.git</span><br></pre></td></tr></table></figure></li><li><p><strong>上传到服务器</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git push origin master</span><br></pre></td></tr></table></figure><blockquote><p>Counting objects: 3, done.<br>Writing objects: 100% (3/3), 212 bytes | 0 bytes/s, done.<br>Total 3 (delta 0), reused 0 (delta 0)<br>To <a href="https://github.com/igeekbar/awesome-project.git" target="_blank" rel="noopener">https://github.com/igeekbar/awesome-project.git</a> </p><p>*[new branch]      master -&gt; master</p></blockquote></li><li><p><strong>克隆仓库</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git clone https://github.com/xxx/xxx.git</span><br></pre></td></tr></table></figure></li><li><p><strong>从服务器上获得修改</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git pull origin master</span><br></pre></td></tr></table></figure></li></ol><p>​    10.  <strong>其他使用方法可自行了解</strong></p><h2 id="遇到过的问题及解决办法"><a href="#遇到过的问题及解决办法" class="headerlink" title="遇到过的问题及解决办法:"></a>遇到过的问题及解决办法:</h2><h3 id="问题1：-failed-to-push-some-refs-to-git"><a href="#问题1：-failed-to-push-some-refs-to-git" class="headerlink" title="问题1： failed to push some refs to git?"></a>问题1： <strong><em>failed to push some refs to git?</em></strong></h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git push -u origin master</span><br></pre></td></tr></table></figure><blockquote><p> To <a href="mailto:git@github.com" target="_blank" rel="noopener">git@github.com</a>:  xxx/xxxxx.git</p><p>! [rejected]        master -&gt; master (non-fast-forward)</p><font color="#ff0000" size="4">error:failed to push some refs to <a href="mailto:&#39;git@github.com" target="_blank" rel="noopener">&#39;git@github.com</a>:xxx/xxx.git’</font> <p>hint: Updates were rejected because the tip of your current branch is behin</p><p>hint: its remote counterpart. Integrate the remote changes (e.g.</p><p>hint: ‘git pull …’) before pushing again.</p></blockquote><h4 id="解决方案："><a href="#解决方案：" class="headerlink" title="解决方案："></a><strong><em>解决方案：</em></strong></h4><p>主要原因是github中的README.md文件不在本地代码目录中</p><p>可以通过如下命令进行代码合并【注：pull=fetch+merge]</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git pull --rebase origin master</span><br></pre></td></tr></table></figure><p>执行上面代码后可以看到本地代码库中多了README.md文件</p><p>此时再执行语句</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git push -u origin master</span><br></pre></td></tr></table></figure><p>即可完成代码上传到github</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;git的简介&quot;&gt;&lt;a href=&quot;#git的简介&quot; class=&quot;headerlink&quot; title=&quot;git的简介&quot;&gt;&lt;/a&gt;git的简介&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Git是一个开源的分布式版本控制系统，用于敏捷高效地处理任何或小或大的项目。&lt;/li&gt;
&lt;/ul
      
    
    </summary>
    
      <category term="笔记" scheme="http://edoup.github.io/categories/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="git" scheme="http://edoup.github.io/categories/%E7%AC%94%E8%AE%B0/git/"/>
    
      <category term="问题" scheme="http://edoup.github.io/categories/%E7%AC%94%E8%AE%B0/git/%E9%97%AE%E9%A2%98/"/>
    
    
      <category term="git" scheme="http://edoup.github.io/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>小巷</title>
    <link href="http://edoup.github.io/2018/11/27/%E5%B0%8F%E5%B7%B7/"/>
    <id>http://edoup.github.io/2018/11/27/小巷/</id>
    <published>2018-11-26T16:23:50.000Z</published>
    <updated>2018-12-02T04:43:03.681Z</updated>
    
    <content type="html"><![CDATA[<p><strong><em>小巷</em></strong></p><p>作者：顾城</p><p>小巷<br>又弯又长</p><p>没有门<br>没有窗</p><p>我拿把旧钥匙<br>敲着厚厚的墙</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;&lt;em&gt;小巷&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;作者：顾城&lt;/p&gt;
&lt;p&gt;小巷&lt;br&gt;又弯又长&lt;/p&gt;
&lt;p&gt;没有门&lt;br&gt;没有窗&lt;/p&gt;
&lt;p&gt;我拿把旧钥匙&lt;br&gt;敲着厚厚的墙&lt;/p&gt;

      
    
    </summary>
    
      <category term="诗" scheme="http://edoup.github.io/categories/%E8%AF%97/"/>
    
    
      <category term="顾城" scheme="http://edoup.github.io/tags/%E9%A1%BE%E5%9F%8E/"/>
    
      <category term="诗" scheme="http://edoup.github.io/tags/%E8%AF%97/"/>
    
  </entry>
  
</feed>
